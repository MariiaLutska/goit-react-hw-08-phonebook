{"version":3,"file":"static/js/427.19ee5cb0.chunk.js","mappings":"yOAUaA,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CACjBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,I,kBCXWC,EAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAClBC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,UAACX,EAAD,CAAKE,MAAM,UAAUU,GAAG,KAAKC,QAAQ,QAAQC,WAAW,SAAxD,UAEGL,EAAQM,KAFX,MAEoBN,EAAQO,QAC1B,SAAC,IAAD,CAAeC,KAAK,SAASC,QARZ,kBAAMR,GAASS,EAAAA,EAAAA,IAAcV,GAA7B,EAQjB,sBAKL,ECrBYW,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OAAnB,EAIrBC,EAAiB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,KAAnB,E,UCGtBC,EAAc,WACzB,IAAMJ,GAAWK,EAAAA,EAAAA,IAAYH,GACvBI,GAAYD,EAAAA,EAAAA,IAAYP,GAE9B,OACE,UAACpB,EAAD,CAAKE,MAAM,YAAYU,GAAG,KAA1B,UACGgB,IAAa,SAAC,KAAD,CAASC,MAAO,GAAIC,OAAQ,KAEzCR,EAASS,KAAI,SAAAtB,GAAO,OACnB,SAACD,EAAD,CAA0BC,QAASA,EAASuB,KAAMvB,GAApCA,EAAQwB,GADH,MAK1B,E,UClBYC,EAAS,SAAC,GAA6B,IAA3BD,EAA0B,EAA1BA,GAAIE,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAClC,OACE,sDAEE,SAAC,KAAD,CACEC,QAAQ,SACRC,MAAM,wBACNL,GAAIA,EACJhB,KAAK,OACLkB,MAAOA,EACPpB,KAAK,SACLqB,SAAUA,MAIjB,E,8BCPGG,GAASC,EAAAA,EAAAA,MACTC,GAASD,EAAAA,EAAAA,MAEAE,EAAc,WACzB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAO5B,EAAP,KAAa6B,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAO3B,EAAP,KAAe6B,EAAf,KAEMvB,GAAWK,EAAAA,EAAAA,IAAYH,GACvBd,GAAWC,EAAAA,EAAAA,MAaXmC,EAAoB,SAAAC,GACxB,MAAwBA,EAAEC,OAAlBjC,EAAR,EAAQA,KAAMoB,EAAd,EAAcA,MAGd,MAAa,SAATpB,EACK6B,EAAQT,GACG,WAATpB,EACF8B,EAAUV,QADZ,CAGR,EAkBKc,EAAQ,WACZL,EAAQ,IACRC,EAAU,GACX,EAED,OACE,SAAC,KAAD,WACE,kBAAMK,SAvBW,SAAAH,GACnBA,EAAEI,iBACF,IAAIC,EAAO,CAAErC,KAAAA,EAAMC,OAAAA,GAKnB,GAJeM,EAAS+B,MACtB,SAAArB,GAAI,OAAIA,EAAKjB,KAAKuC,gBAAkBF,EAAKrC,KAAKuC,aAA1C,IAIJ,OAAOC,MAAM,GAAD,OAAIH,EAAKrC,KAAT,2BAEZL,GAAS8C,EAAAA,EAAAA,IAAWJ,IAGtBH,GACD,EASiCQ,aAAa,MAA3C,WACE,qCAEE,SAAC,KAAD,CACEpB,QAAQ,SACRqB,QAASZ,EACTX,MAAOpB,EACPE,KAAK,OACLF,KAAK,OACL4C,YAAY,gBACZC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACR7B,GAAIM,QAGR,uCAEE,SAAC,KAAD,CACEF,QAAQ,SACRqB,QAASZ,EACTX,MAAOnB,EACPC,KAAK,MACLF,KAAK,SACL4C,YAAY,kBACZC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACR7B,GAAIQ,QAGR,SAAC,IAAD,CAAexB,KAAK,SAApB,6BAIP,EC3Fc,SAAS8C,IACtB,IAAMrD,GAAWC,EAAAA,EAAAA,MACXiB,GAAYD,EAAAA,EAAAA,IAAYP,GAM9B,OAJA4C,EAAAA,EAAAA,YAAU,WACRtD,GAASuD,EAAAA,EAAAA,MACV,GAAE,CAACvD,KAGF,UAACV,EAAD,CAAKY,GAAG,OAAOsD,QAAQ,OAAvB,WACE,SAACxB,EAAD,KACA,yBAAMd,GAAa,4BACnB,SAACM,EAAD,KACA,SAACR,EAAD,MAGL,C","sources":["components/Box.js","components/Contact/Contact.js","redux/contacts/selectors.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border\n);\n\nexport default Box;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { Box } from '../Box';\nimport { ContactButton } from '../Button/Button';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(contact));\n\n  // const handleToggle = () => dispatch(toggleCompleted(contact));\n\n  return (\n    <Box color=\"primary\" as=\"li\" display=\"block\" alignItems=\"center\">\n      {/* <label type=\"value\" onChange={handleToggle} /> */}\n      {contact.name} : {contact.number}\n      <ContactButton type=\"button\" onClick={handleDelete}>\n        Delete\n      </ContactButton>\n    </Box>\n  );\n};\n","export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectContacts = state => state.contacts.items;\n","import { useSelector } from 'react-redux';\nimport { Contact } from '../Contact/Contact';\nimport { Box } from '../Box';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { selectLoading } from '../../redux/contacts/selectors';\nimport { Circles } from 'react-loader-spinner';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectLoading);\n\n  return (\n    <Box color=\"secondary\" as=\"ul\">\n      {isLoading && <Circles width={50} height={50} />}\n\n      {contacts.map(contact => (\n        <Contact key={contact.id} contact={contact} item={contact} />\n      ))}\n    </Box>\n  );\n};\n","import { Input } from '@chakra-ui/react';\n\nexport const Filter = ({ id, value, onChange }) => {\n  return (\n    <label>\n      Find contacts by name\n      <Input\n        variant=\"filled\"\n        label=\"Find contacts by name\"\n        id={id}\n        type=\"text\"\n        value={value}\n        name=\"filter\"\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n// import css from './ContactForm.module.css';\nimport { Box } from '@chakra-ui/react';\nimport { Input } from '@chakra-ui/react';\nimport { ContactButton } from '../Button/Button';\n\nlet nameId = nanoid();\nlet numbId = nanoid();\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  // const [id, setId] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n  //   const form = e.currentTarget;\n  //   dispatch(\n  //     addContact({\n  //       name: form.elements.name.value,\n  //       number: form.elements.number.value,\n  //     })\n  //   );\n  //   form.reset();\n  // };\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    // setId(nanoid());\n\n    if (name === 'name') {\n      return setName(value);\n    } else if (name === 'number') {\n      return setNumber(value);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let data = { name, number };\n    let findName = contacts.find(\n      item => item.name.toLowerCase() === data.name.toLowerCase()\n    );\n\n    if (findName) {\n      return alert(`${data.name} is already in contact`);\n    } else {\n      dispatch(addContact(data));\n    }\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Box>\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <label>\n          Name\n          <Input\n            variant=\"filled\"\n            onInput={handleInputChange}\n            value={name}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter name...\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            id={nameId}\n          />\n        </label>\n        <label>\n          Number\n          <Input\n            variant=\"filled\"\n            onInput={handleInputChange}\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Enter number...\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            id={numbId}\n          />\n        </label>\n        <ContactButton type=\"submit\">Add contact</ContactButton>\n      </form>\n    </Box>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from '../redux/contacts/selectors';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Box } from '../components/Box';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box as=\"main\" padding=\"40px\">\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter />\n      <ContactList />\n    </Box>\n  );\n}\n"],"names":["Box","styled","color","space","layout","flexbox","background","border","Contact","contact","dispatch","useDispatch","as","display","alignItems","name","number","type","onClick","deleteContact","selectLoading","state","contacts","loading","selectContacts","items","ContactList","useSelector","isLoading","width","height","map","item","id","Filter","value","onChange","variant","label","nameId","nanoid","numbId","ContactForm","useState","setName","setNumber","handleInputChange","e","target","reset","onSubmit","preventDefault","data","find","toLowerCase","alert","addContact","autoComplete","onInput","placeholder","pattern","title","required","Contacts","useEffect","fetchContacts","padding"],"sourceRoot":""}